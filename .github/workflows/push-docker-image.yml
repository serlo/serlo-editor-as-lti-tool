name: Push Docker Image

on:
  push:
    paths:
      - 'package.json'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Get version from package.json
        id: package-version
        run: |
          VERSION=$(grep -m1 '"version":' package.json | awk -F: '{ print $2 }' | sed 's/[", ]//g')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if version exists
        id: check-version
        run: |
          if docker manifest inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.package-version.outputs.VERSION }} > /dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        if: steps.check-version.outputs.exists == 'false'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.dev
          push: true
          tags:
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{
            steps.package-version.outputs.VERSION }}
          labels: ${{ steps.meta.outputs.labels }}
